name: Token
includes:
  - vector
  - metavar_ptr.h
  - type.h
members:
  s: std::string
back_edges:
  mv: metavar
  typ: type
unique_index: lookup_by_s
lookups:
  lookup_by_s:
    getter: s
    type: std::string
    unique: true
to_ostream:
  return os << t->s;
post_create: >-
  auto pos = t->s.find('$');
  if(pos != std::string::npos) {
    token typ_token = TokenIndex::lookup_by_s(t->s.substr(0, pos));
    type typ = Type::get_or_create(typ_token);
    for(int i = 0; i < 16; i++) {
      metavar mv = Metavar::create(typ, i);
      typ->mvs.push_back(mv);
      mv->tok = t;
    }
    uint8_t i = std::stoi(t->s.substr(0, t->s.size() - pos - 1));
    t->mv = MetavarIndex::lookup_by_typ_i(std::make_pair(typ, i));
  }
