name: Rule
includes:
  - judgment.h
  - set
members:
  conditions: std::vector<judgment>
  conclusion: judgment
  label: token
properties:
  signature:
    type: const std::multiset<token>
    body: "{ return {}; }"
  conclusion_type:
    type: token
    body: "{ return Judgment::get(conclusion).type(); }"
lookups:
  lookup_by_conclusion:
    getter: conclusion
    type: judgment
  lookup_by_signature:
    getter: signature()
    type: std::multiset<token>
  lookup_by_conclusion_type:
    getter: conclusion_type()
    type: token
  lookup_by_condition:
    getter: conditions
    type: std::vector<judgment>
    iterable: true
  lookup_by_label:
    type: token
    getter: label
extra:
  using application = int;
  application apply(rule, std::unordered_set<application>&);
